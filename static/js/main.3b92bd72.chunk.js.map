{"version":3,"sources":["components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/FeedbackCounter/FeedbackCounter.jsx","App.jsx","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","index","type","onClick","FeedbackCounter","useState","setGood","setNeutral","setBad","feedbacks","countTotalFeedback","Object","keys","prevState","Math","round","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAAe,SAASA,EAAT,GAAsE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC3D,OACI,+BACQ,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,0CAAaC,KACb,qDAAwBC,EAAqB,EAAIA,EAAqB,EAAtE,UCPD,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC3C,OACAD,EAAQE,KAAI,SAACC,EAAQC,GACjB,OACI,wBAEIC,KAAK,SACLC,QAAS,kBAAML,EAAgBE,IAHnC,SAKKA,GAJIC,MCDV,SAASG,IAEpB,MAAwBC,mBAAS,GAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOZ,EAAP,KAAYe,EAAZ,KAEMC,EAAY,CAAElB,OAAMC,UAASC,OAsB7BiB,EAAqB,WACvB,OAAOnB,EAAOC,EAAUC,GAQ5B,OACI,qCACI,uDAEA,cAACG,EAAD,CAAiBC,QAASc,OAAOC,KAAKH,GAAYX,gBAhC1B,SAAAI,GAC5B,OAAQA,GACJ,IAAK,OACFI,GAAQ,SAAAO,GAAS,OAAIA,EAAY,KAChC,MAEJ,IAAK,UACFN,GAAW,SAAAM,GAAS,OAAIA,EAAY,KACnC,MAEJ,IAAK,MACFL,GAAO,SAAAK,GAAS,OAAIA,EAAY,SAuBnC,4CAE0B,IAAzBH,IACK,mDACA,cAACpB,EAAD,CACFC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EAAKC,MAAOgB,IACjBf,mBAlBDmB,KAAKC,MAAa,IAAPxB,EAAamB,UC5BxBM,MANf,WACE,OACE,cAACZ,EAAD,KCCJa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.3b92bd72.chunk.js","sourcesContent":["export default function Statistics({good, neutral, bad, total, positivePercentage}) {\n    return (\n        <ul>\n                <li>Good: {good}</li>\n                <li>Neutral: {neutral}</li>\n                <li>Bad: {bad}</li>\n                <li>Total : {total}</li>\n                <li>Positive feedback: {positivePercentage > 0 ? positivePercentage : 0}%</li>\n            </ul>\n    )\n}","export default function FeedbackOptions({ options, onLeaveFeedback }) {\n        return (\n        options.map((option, index) => {\n            return (\n                <button\n                    key={index}\n                    type=\"button\"\n                    onClick={() => onLeaveFeedback(option)}    \n                >\n                    {option}\n                </button>\n            )\n        })\n    )\n}","import { useState } from 'react';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\n\nexport default function FeedbackCounter() {\n\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n\n    const feedbacks = { good, neutral, bad };  \n\n   \n    const handleFeedbackIncrement = type => {\n        switch (type) {\n            case 'good':\n               setGood(prevState => prevState + 1); \n                break;\n            \n            case 'neutral':\n               setNeutral(prevState => prevState + 1); \n                break;\n            \n            case 'bad':\n               setBad(prevState => prevState + 1); \n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    const countTotalFeedback = () => {\n        return good + neutral + bad;\n    }\n\n    const countPositiveFeedbackPercentage = () => {\n        return Math.round(good * 100 / countTotalFeedback());\n    }   \n\n\n    return (\n        <>\n            <h1>Please leave feedback</h1>\n\n            <FeedbackOptions options={Object.keys(feedbacks)} onLeaveFeedback={handleFeedbackIncrement}/>\n            \n            <h2>Statistics</h2>\n\n            {countTotalFeedback() === 0\n                ? <h2>No feedback given</h2>\n                : <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad} total={countTotalFeedback()}\n                positivePercentage={countPositiveFeedbackPercentage()} />}  \n        </>\n    )\n}","import FeedbackCounter from \"./components/FeedbackCounter/FeedbackCounter\";\n\n\nfunction App() {\n  return (\n    <FeedbackCounter/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}